using System;
using BppLib.Core;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Globalization;

namespace BppLib.BppParser
{
    public static partial class ParserBpp
    {
		public static CutF ParseCutF(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutF obj = new CutF();
			obj.IntId = id;
			obj.Side = Convert.ToInt32(values[0]);
			obj.X = Convert.ToDouble(values[1], CultureInfo.InvariantCulture);
			obj.Y = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Iso = values[3].Trim().Trim('"');
			obj.Opt =(values[4].Trim() == "1");
			obj.Th = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.Dp = Convert.ToDouble(values[6], CultureInfo.InvariantCulture);
			obj.Az = Convert.ToDouble(values[7], CultureInfo.InvariantCulture);
			obj.Cka =(InclinationRotationType)Convert.ToInt32(values[8]);
			obj.Thr =(values[9].Trim() == "1");
			obj.Rv =(values[10].Trim() == "1");
			obj.Ttk = Convert.ToDouble(values[11], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[12], CultureInfo.InvariantCulture);
			obj.Vtr = Convert.ToInt32(values[13]);
			obj.Gip =(values[14].Trim() == "1");
			obj.Tnm = values[15].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[16]);
			obj.Tcl = Convert.ToInt32(values[17]);
			obj.Rsp = Convert.ToInt32(values[18]);
			obj.Ios = Convert.ToInt32(values[19]);
			obj.Wsp = Convert.ToInt32(values[20]);
			obj.Spi = values[21].Trim().Trim('"');
			obj.Bfc =(values[22].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[23]);
			obj.Brc = Convert.ToInt32(values[24]);
			obj.Bdr =(values[25].Trim() == "1");
			obj.Prv =(values[26].Trim() == "1");
			obj.Nrv =(values[27].Trim() == "1");
			obj.Din = Convert.ToDouble(values[28], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[29], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[30]);
			obj.Dsp = Convert.ToInt32(values[31]);
			obj.Cen = values[32].Trim().Trim('"');
			obj.Agg = values[33].Trim().Trim('"');
			obj.Lay = values[34].Trim().Trim('"');
			obj.Etb =(values[35].Trim() == "1");
			obj.Kdt =(values[36].Trim() == "1");
			return obj;
		}

		public static CutFR ParseCutFR(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutFR obj = new CutFR();
			obj.IntId = id;
			obj.Side = Convert.ToInt32(values[0]);
			obj.Crn = values[1].Trim().Trim('"');
			obj.X = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Y = Convert.ToDouble(values[3], CultureInfo.InvariantCulture);
			obj.Lx = Convert.ToDouble(values[4], CultureInfo.InvariantCulture);
			obj.Ly = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.Iso = values[6].Trim().Trim('"');
			obj.Opt =(values[7].Trim() == "1");
			obj.Th = Convert.ToDouble(values[8], CultureInfo.InvariantCulture);
			obj.Dp = Convert.ToDouble(values[9], CultureInfo.InvariantCulture);
			obj.Az = Convert.ToDouble(values[10], CultureInfo.InvariantCulture);
			obj.Cka =(InclinationRotationType)Convert.ToInt32(values[11]);
			obj.Thr =(values[12].Trim() == "1");
			obj.Rv =(values[13].Trim() == "1");
			obj.Ttk = Convert.ToDouble(values[14], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[15], CultureInfo.InvariantCulture);
			obj.Vtr = Convert.ToInt32(values[16]);
			obj.Gip =(values[17].Trim() == "1");
			obj.Tnm = values[18].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[19]);
			obj.Tcl = Convert.ToInt32(values[20]);
			obj.Rsp = Convert.ToInt32(values[21]);
			obj.Ios = Convert.ToInt32(values[22]);
			obj.Wsp = Convert.ToInt32(values[23]);
			obj.Spi = values[24].Trim().Trim('"');
			obj.Bfc =(values[25].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[26]);
			obj.Brc = Convert.ToInt32(values[27]);
			obj.Bdr =(values[28].Trim() == "1");
			obj.Prv =(values[29].Trim() == "1");
			obj.Nrv =(values[30].Trim() == "1");
			obj.Din = Convert.ToDouble(values[31], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[32], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[33]);
			obj.Dsp = Convert.ToInt32(values[34]);
			obj.Cen = values[35].Trim().Trim('"');
			obj.Agg = values[36].Trim().Trim('"');
			obj.Lay = values[37].Trim().Trim('"');
			obj.Etb =(values[38].Trim() == "1");
			obj.Kdt =(values[39].Trim() == "1");
			return obj;
		}

		public static CutG ParseCutG(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutG obj = new CutG();
			obj.IntId = id;
			obj.Side = Convert.ToInt32(values[0]);
			obj.Crn = values[1].Trim().Trim('"');
			obj.X = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Y = Convert.ToDouble(values[3], CultureInfo.InvariantCulture);
			obj.Z = Convert.ToDouble(values[4], CultureInfo.InvariantCulture);
			obj.Dp = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.Typ =(CuttingType)Convert.ToInt32(values[6]);
			obj.L = Convert.ToDouble(values[7], CultureInfo.InvariantCulture);
			obj.Ang = Convert.ToDouble(values[8], CultureInfo.InvariantCulture);
			obj.Xe = Convert.ToDouble(values[9], CultureInfo.InvariantCulture);
			obj.Ye = Convert.ToDouble(values[10], CultureInfo.InvariantCulture);
			obj.Ze = Convert.ToDouble(values[11], CultureInfo.InvariantCulture);
			obj.Az = Convert.ToDouble(values[12], CultureInfo.InvariantCulture);
			obj.Iso = values[13].Trim().Trim('"');
			obj.Opt =(values[14].Trim() == "1");
			obj.Th = Convert.ToDouble(values[15], CultureInfo.InvariantCulture);
			obj.Rty =(Repetition)Convert.ToInt32(values[16]);
			obj.Dx = Convert.ToDouble(values[17], CultureInfo.InvariantCulture);
			obj.Dy = Convert.ToDouble(values[18], CultureInfo.InvariantCulture);
			obj.R = Convert.ToDouble(values[19], CultureInfo.InvariantCulture);
			obj.A = Convert.ToDouble(values[20], CultureInfo.InvariantCulture);
			obj.Da = Convert.ToDouble(values[21], CultureInfo.InvariantCulture);
			obj.Rdl =(values[22].Trim() == "1");
			obj.Nrp = Convert.ToInt32(values[23]);
			obj.Cka =(InclinationRotationType)Convert.ToInt32(values[24]);
			obj.Thr =(values[25].Trim() == "1");
			obj.Rv =(values[26].Trim() == "1");
			obj.Xrc = Convert.ToDouble(values[27], CultureInfo.InvariantCulture);
			obj.Yrc = Convert.ToDouble(values[28], CultureInfo.InvariantCulture);
			obj.Arp = Convert.ToDouble(values[29], CultureInfo.InvariantCulture);
			obj.Lrp = Convert.ToDouble(values[30], CultureInfo.InvariantCulture);
			obj.Er =(values[31].Trim() == "1");
			obj.Cow =(values[32].Trim() == "1");
			obj.Ttk = Convert.ToDouble(values[33], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[34], CultureInfo.InvariantCulture);
			obj.Tos =(values[35].Trim() == "1");
			obj.Vtr = Convert.ToInt32(values[36]);
			obj.Gip =(values[37].Trim() == "1");
			obj.Id = values[38].Trim().Trim('"');
			obj.Tnm = values[39].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[40]);
			obj.Tcl = Convert.ToInt32(values[41]);
			obj.Rsp = Convert.ToInt32(values[42]);
			obj.Ios = Convert.ToInt32(values[43]);
			obj.Wsp = Convert.ToInt32(values[44]);
			obj.Spi = values[45].Trim().Trim('"');
			obj.Bfc =(values[46].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[47]);
			obj.Brc = Convert.ToInt32(values[48]);
			obj.Bdr =(values[49].Trim() == "1");
			obj.Prv =(values[50].Trim() == "1");
			obj.Nrv =(values[51].Trim() == "1");
			obj.Din = Convert.ToDouble(values[52], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[53], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[54]);
			obj.Dsp = Convert.ToInt32(values[55]);
			obj.Cen = values[56].Trim().Trim('"');
			obj.Agg = values[57].Trim().Trim('"');
			obj.Lay = values[58].Trim().Trim('"');
			obj.Dvr = Convert.ToDouble(values[59], CultureInfo.InvariantCulture);
			obj.Etb =(values[60].Trim() == "1");
			obj.Kdt =(values[61].Trim() == "1");
			obj.Ims = Convert.ToInt32(values[62]);
			return obj;
		}

		public static CutGeo ParseCutGeo(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutGeo obj = new CutGeo();
			obj.IntId = id;
			obj.Gid = values[0].Trim().Trim('"');
			obj.Dp = Convert.ToDouble(values[1], CultureInfo.InvariantCulture);
			obj.Az = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Iso = values[3].Trim().Trim('"');
			obj.Opt =(values[4].Trim() == "1");
			obj.Th = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.Cka =(InclinationRotationType)Convert.ToInt32(values[6]);
			obj.Thr =(values[7].Trim() == "1");
			obj.Rv =(values[8].Trim() == "1");
			obj.Cow =(values[9].Trim() == "1");
			obj.Sil = values[10].Trim().Trim('"');
			obj.Ttk = Convert.ToDouble(values[11], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[12], CultureInfo.InvariantCulture);
			obj.Z = Convert.ToDouble(values[13], CultureInfo.InvariantCulture);
			obj.Tos =(values[14].Trim() == "1");
			obj.Vtr = Convert.ToInt32(values[15]);
			obj.Gip =(values[16].Trim() == "1");
			obj.Id = values[17].Trim().Trim('"');
			obj.Tnm = values[18].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[19]);
			obj.Tcl = Convert.ToInt32(values[20]);
			obj.Rsp = Convert.ToInt32(values[21]);
			obj.Ios = Convert.ToInt32(values[22]);
			obj.Wsp = Convert.ToInt32(values[23]);
			obj.Spi = values[24].Trim().Trim('"');
			obj.Bfc =(values[25].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[26]);
			obj.Brc = Convert.ToInt32(values[27]);
			obj.Bdr =(values[28].Trim() == "1");
			obj.Prv =(values[29].Trim() == "1");
			obj.Nrv =(values[30].Trim() == "1");
			obj.Din = Convert.ToDouble(values[31], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[32], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[33]);
			obj.Dsp = Convert.ToInt32(values[34]);
			obj.Cen = values[35].Trim().Trim('"');
			obj.Agg = values[36].Trim().Trim('"');
			obj.Lay = values[37].Trim().Trim('"');
			obj.Dvr = Convert.ToDouble(values[38], CultureInfo.InvariantCulture);
			obj.Etb =(values[39].Trim() == "1");
			obj.Kdt =(values[40].Trim() == "1");
			obj.Ims = Convert.ToInt32(values[41]);
			return obj;
		}

		public static CutX ParseCutX(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutX obj = new CutX();
			obj.IntId = id;
			obj.Side = Convert.ToInt32(values[0]);
			obj.Crn = values[1].Trim().Trim('"');
			obj.X = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Y = Convert.ToDouble(values[3], CultureInfo.InvariantCulture);
			obj.Z = Convert.ToDouble(values[4], CultureInfo.InvariantCulture);
			obj.Dp = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.L = Convert.ToDouble(values[6], CultureInfo.InvariantCulture);
			obj.Nrp = Convert.ToInt32(values[7]);
			obj.D = Convert.ToDouble(values[8], CultureInfo.InvariantCulture);
			obj.Iso = values[9].Trim().Trim('"');
			obj.Opt =(values[10].Trim() == "1");
			obj.Th = Convert.ToDouble(values[11], CultureInfo.InvariantCulture);
			obj.Thr =(values[12].Trim() == "1");
			obj.Rv =(values[13].Trim() == "1");
			obj.Cow =(values[14].Trim() == "1");
			obj.Ttk = Convert.ToDouble(values[15], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[16], CultureInfo.InvariantCulture);
			obj.Tos =(values[17].Trim() == "1");
			obj.Vtr = Convert.ToInt32(values[18]);
			obj.Gip =(values[19].Trim() == "1");
			obj.Tnm = values[20].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[21]);
			obj.Tcl = Convert.ToInt32(values[22]);
			obj.Rsp = Convert.ToInt32(values[23]);
			obj.Ios = Convert.ToInt32(values[24]);
			obj.Wsp = Convert.ToInt32(values[25]);
			obj.Spi = values[26].Trim().Trim('"');
			obj.Bfc =(values[27].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[28]);
			obj.Brc = Convert.ToInt32(values[29]);
			obj.Bdr =(values[30].Trim() == "1");
			obj.Prv =(values[31].Trim() == "1");
			obj.Nrv =(values[32].Trim() == "1");
			obj.Din = Convert.ToDouble(values[33], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[34], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[35]);
			obj.Dsp = Convert.ToInt32(values[36]);
			obj.Cen = values[37].Trim().Trim('"');
			obj.Agg = values[38].Trim().Trim('"');
			obj.Lay = values[39].Trim().Trim('"');
			obj.Dvr = Convert.ToDouble(values[40], CultureInfo.InvariantCulture);
			obj.Etb =(values[41].Trim() == "1");
			obj.Kdt =(values[42].Trim() == "1");
			return obj;
		}

		public static CutY ParseCutY(string code)
		{
			string[] subs = SplitColon(code);
			string[] p1 = SplitComma(subs[0]);
			int id = Convert.ToInt32(p1[3]);
			string[] values  = SplitComma(subs[1]);
			CutY obj = new CutY();
			obj.IntId = id;
			obj.Side = Convert.ToInt32(values[0]);
			obj.Crn = values[1].Trim().Trim('"');
			obj.X = Convert.ToDouble(values[2], CultureInfo.InvariantCulture);
			obj.Y = Convert.ToDouble(values[3], CultureInfo.InvariantCulture);
			obj.Z = Convert.ToDouble(values[4], CultureInfo.InvariantCulture);
			obj.Dp = Convert.ToDouble(values[5], CultureInfo.InvariantCulture);
			obj.L = Convert.ToDouble(values[6], CultureInfo.InvariantCulture);
			obj.Nrp = Convert.ToInt32(values[7]);
			obj.D = Convert.ToDouble(values[8], CultureInfo.InvariantCulture);
			obj.Iso = values[9].Trim().Trim('"');
			obj.Opt =(values[10].Trim() == "1");
			obj.Th = Convert.ToDouble(values[11], CultureInfo.InvariantCulture);
			obj.Thr =(values[12].Trim() == "1");
			obj.Rv =(values[13].Trim() == "1");
			obj.Cow =(values[14].Trim() == "1");
			obj.Ttk = Convert.ToDouble(values[15], CultureInfo.InvariantCulture);
			obj.Ovm = Convert.ToDouble(values[16], CultureInfo.InvariantCulture);
			obj.Tos =(values[17].Trim() == "1");
			obj.Vtr = Convert.ToInt32(values[18]);
			obj.Gip =(values[19].Trim() == "1");
			obj.Tnm = values[20].Trim().Trim('"');
			obj.Ttp = Convert.ToInt32(values[21]);
			obj.Tcl = Convert.ToInt32(values[22]);
			obj.Rsp = Convert.ToInt32(values[23]);
			obj.Ios = Convert.ToInt32(values[24]);
			obj.Wsp = Convert.ToInt32(values[25]);
			obj.Spi = values[26].Trim().Trim('"');
			obj.Bfc =(values[27].Trim() == "1");
			obj.Shp = Convert.ToInt32(values[28]);
			obj.Brc = Convert.ToInt32(values[29]);
			obj.Bdr =(values[30].Trim() == "1");
			obj.Prv =(values[31].Trim() == "1");
			obj.Nrv =(values[32].Trim() == "1");
			obj.Din = Convert.ToDouble(values[33], CultureInfo.InvariantCulture);
			obj.Dou = Convert.ToDouble(values[34], CultureInfo.InvariantCulture);
			obj.Crc =(ToolCorrection)Convert.ToInt32(values[35]);
			obj.Dsp = Convert.ToInt32(values[36]);
			obj.Cen = values[37].Trim().Trim('"');
			obj.Agg = values[38].Trim().Trim('"');
			obj.Lay = values[39].Trim().Trim('"');
			obj.Dvr = Convert.ToDouble(values[40], CultureInfo.InvariantCulture);
			obj.Etb =(values[41].Trim() == "1");
			obj.Kdt =(values[42].Trim() == "1");
			return obj;
		}

        
    }
}